

@model EBS.viewModels.customerVM

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Delete Customer | SEC</title>
    <link href="~/Content/Registeration.css" rel="stylesheet" />

</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.cID)

        <section class="vh-100 gradient-custom;" style="font-family: Verdana, Geneva, Tahoma, sans-serif; ">
            <div class="container py-5 h-100">
                <div class="row justify-content-center align-items-center h-100">

                    <div class="col-12 col-lg-9 col-xl-7">
                        <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">

                            <div class="card-body p-4 p-md-5">
                                <h2 class="mb-4 pb-2 pb-md-0 mb-md-5"><strong>Delete Customer</strong></h2>

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="col-md-6 mb-4">

                                        <div class="form-outline form-group">

                                            @Html.EditorFor(model => model.cFirstName, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(m => m.cFirstName)
                                            @Html.ValidationMessageFor(model => model.cFirstName, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="col-md-6 mb-4">

                                        <div class="form-outline form-group">
                                            @Html.EditorFor(model => model.cMidName, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(model => model.cMidName)
                                            @Html.ValidationMessageFor(model => model.cMidName, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-4 d-flex align-items-center">

                                        <div class="form-outline form-group">
                                            @Html.EditorFor(model => model.cLastName, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(model => model.cLastName)
                                            @Html.ValidationMessageFor(model => model.cLastName, "", new { @class = "text-danger" })
                                        </div>

                                    </div>

                                    <div class="col-md-6 mb-4 d-flex align-items-center">


                                        <div class="form-outline form-group">
                                            @Html.EditorFor(model => model.cAddress, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(model => model.cAddress)
                                            @Html.ValidationMessageFor(model => model.cAddress, "", new { @class = "text-danger" })
                                        </div>

                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-4 pb-2">

                                        <div class="form-outline form-group">
                                            @Html.EditorFor(model => model.cNumber, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(model => model.cNumber)
                                            @Html.ValidationMessageFor(model => model.cNumber, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="col-md-6 mb-4 pb-2">

                                        <div class="form-outline form-group">
                                            @Html.EditorFor(model => model.cNumberOp, new { htmlAttributes = new { @class = "form-control form-control-lg", @disabled = "disabled" } })
                                            @Html.LabelFor(model => model.cNumberOp)
                                            @Html.ValidationMessageFor(model => model.cNumberOp, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6 mb-4 pb-2">
                                        <button type="submit" value="Delete" class="btn btn-danger btn-lg btn-block">Delete</button>
                                    </div>
                                    <div class="col-md-6 mb-4 pb-2">
                                        @Html.ActionLink("Back", "Index", "Customer", null, new { @class = "btn btn-secondary btn-lg btn-block" })
                                    </div>
                                </div>



                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

    }
</body>
</html>

