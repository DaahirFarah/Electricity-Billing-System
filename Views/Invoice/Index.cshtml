
@model EBS.viewModels.invWrapper

@{
    ViewBag.Title = "Invoices | SEC";
    Layout = "~/Views/Shared/_Layout2.cshtml";
    
}

<!DOCTYPE html>

<html>
<head>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link href="~/Assets/modal.css" rel="stylesheet" />
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- DataTables -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap4.min.js"></script>

    <!-- Bootstrap -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">


    <style>
        .content {
            display: flex;
            justify-content: center;
            padding: 200px; /* Add padding around the table */
        }

        .table-container {
            max-width: 300px; /* Set a maximum width for the table container */
            width: 10%;
            padding-top: 20px;
        }
        .table thead th {
            white-space: nowrap; /* Prevent text wrapping */
        }

        .container {
            margin-left:100px;
            padding-top: 30px;
            padding-left: 40px;
            padding-right: 20px;
            padding-bottom: 20px;
        }

        .modal-body{
            width:100%;
        }

    </style>

    <title>Invoices | SEC</title>


</head>
<body>

    <div class="mt-4 pt-2" style="padding-left: 40px; margin-left: 100px;">
        <form action="@Url.Action("GenerateInvoice", "Invoice")" method="get">
            <input class="btn btn-secondary btn-lg btn-block" type="submit" value="Download Invoices" />
        </form>
    </div>

    <div class="mt-4 pt-2" style="padding-left: 40px; margin-left: 100px;">

        <input data-toggle="modal" data-target="#createInvoiceModal" class="btn btn-primary btn-lg btn-block" type="submit" value="Create Invoice" />

    </div>


    <!--Create Invoice Modal-->
    <div class="modal fade" id="createInvoiceModal" tabindex="-1" aria-labelledby="createInvoiceModalLabel" aria-hidden="true" style="color:black">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createInvoiceModalLabel">Create Invoice</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card rounded shadow">
                        <div class="card-body">

                            @using (Html.BeginForm("Create", "Invoice", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div class="card-body p-4 p-md-5">
                                    <h2 class="mb-4 pb-2 pb-md-0 mb-md-5"><strong>Create Invoice</strong></h2>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="row">
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(m => m.invoice.cID)
                                                @Html.EditorFor(model => model.invoice.cID, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "cID" } })
                                                @Html.ValidationMessageFor(model => model.invoice.cID, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(model => model.invoice.Rate)
                                                @Html.EditorFor(model => model.invoice.Rate, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "Rate", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.invoice.Rate, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(m => m.invoice.prev_Reading)
                                                @Html.EditorFor(model => model.invoice.prev_Reading, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "prev_Reading" } })
                                                @Html.ValidationMessageFor(model => model.invoice.prev_Reading, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(model => model.invoice.cur_Reading)
                                                @Html.EditorFor(model => model.invoice.cur_Reading, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "cur_Reading" } })
                                                @Html.ValidationMessageFor(model => model.invoice.cur_Reading, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(m => m.invoice.reading_Value)
                                                @Html.EditorFor(model => model.invoice.reading_Value, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "reading_Value", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.invoice.reading_Value, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(model => model.invoice.reading_Date)
                                                @Html.EditorFor(model => model.invoice.reading_Date, new { htmlAttributes = new { @class = "form-control form-control-lg", Type = "date" } })
                                                @Html.ValidationMessageFor(model => model.invoice.reading_Date, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-4">

                                            <div class="form-outline form-group">
                                                @Html.LabelFor(m => m.invoice.total_Fee)
                                                @Html.EditorFor(model => model.invoice.total_Fee, new { htmlAttributes = new { @class = "form-control form-control-lg", @readonly = "readonly", id = "result" } })
                                                @Html.ValidationMessageFor(model => model.invoice.total_Fee, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <!--Below div element holds some buttons. Leave it alone-->
                                        <div class="row">
                                            <div class="col-md-6 mb-4 pb-2">
                                                <input type="submit" value="Create" class="btn btn-success btn-lg btn-block" />

                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Update Invoice Modal-->
    <div class="modal fade" id="updateInvoiceModal" tabindex="-1" aria-labelledby="updateInvoiceModalLabel" aria-hidden="true" style="color:black">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createInvoiceModalLabel">Create Invoice</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card rounded shadow">
                        <div class="card-body">

                            @using (Html.BeginForm("Edit", "Invoice", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.invoice.invoiceID)
                                                               
                                                    <div class="card-body p-4 p-md-5">
                                                        <h2 class="mb-4 pb-2 pb-md-0 mb-md-5"><strong>Update Invoice</strong></h2>
                                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                                        <div class="row">
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(m => m.invoice.cID)
                                                                    @Html.EditorFor(model => model.invoice.cID, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.cID, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(model => model.invoice.Rate)
                                                                    @Html.EditorFor(model => model.invoice.Rate, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "Rate", @readonly = "readonly" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.Rate, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(m => m.invoice.prev_Reading)
                                                                    @Html.EditorFor(model => model.invoice.prev_Reading, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "prev_Reading" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.prev_Reading, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(model => model.invoice.cur_Reading)
                                                                    @Html.EditorFor(model => model.invoice.cur_Reading, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "cur_Reading" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.cur_Reading, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>
                                                        </div>


                                                        <div class="row">
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(m => m.invoice.reading_Value)
                                                                    @Html.EditorFor(model => model.invoice.reading_Value, new { htmlAttributes = new { @class = "form-control form-control-lg", id = "reading_Value", @readonly = "readonly" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.reading_Value, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>
                                                            <div class="col-md-6 mb-4">

                                                                @*<div class="form-outline form-group">
                                                                    @Html.LabelFor(model => model.invoice.reading_Date)
                                                                    <input type="date" class="form-control form-control-lg" id="reading_Date" name="reading_Date" value="@Model.invoice.reading_Date.ToString("yyyy-MM-dd")" />
                                                                    @Html.ValidationMessageFor(model => model.invoice.reading_Date, "", new { @class = "text-danger" })
                                                                </div>*@

                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-md-6 mb-4">

                                                                <div class="form-outline form-group">
                                                                    @Html.LabelFor(m => m.invoice.total_Fee)
                                                                    @Html.EditorFor(model => model.invoice.total_Fee, new { htmlAttributes = new { @class = "form-control form-control-lg", @readonly = "readonly", id = "result" } })
                                                                    @Html.ValidationMessageFor(model => model.invoice.total_Fee, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-6 mb-4 pb-2">
                                                                    <button type="submit" value="Create" class="btn btn-primary btn-lg btn-block">Update</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>                                           
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!--Index: DataTable-->
    <div class="container">
        <table id="myTable" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Invoice ID</th>
                    <th>Customer ID</th>
                    <th>Previous Reading</th>
                    <th>Current Reading</th>
                    <th>Reading Date</th>
                    <th>Rate ($)</th>
                    <th>Usage (KwH)</th>
                    <th>Total Amount ($)</th>
                    <th>Actions</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.invoiceList)
                {
                    <tr>

                        <td>@Html.DisplayFor(model => item.invoiceID)</td>
                        <td>@Html.DisplayFor(model => item.cID)</td>
                        <td>@Html.DisplayFor(model => item.prev_Reading)</td>
                        <td>@Html.DisplayFor(model => item.cur_Reading)</td>
                        <td>@(item.reading_Date.Date.ToString("d"))</td>
                        <td>@Html.DisplayFor(model => item.Rate)</td>
                        <td>@Html.DisplayFor(model => item.reading_Value)</td>
                        <td>@Html.DisplayFor(model => item.total_Fee)</td>
                        <td>
                            <a href="#" data-toggle="modal" data-target="#updateInvoiceModal">
                                <i class="fa-solid fa-square-pen fa-1x" style="color: #1ABC9C;"></i>
                            </a>

                            <a href="@Url.Action("Delete", "Invoice", new { id = item.invoiceID })">
                                <i class="fas fa-trash fa-1x delete-icon item" style="color: #FF5733"></i>
                            </a>

                            <a href="@Url.Action("CustomerBill", "Invoice", new { id = item.invoiceID })">
                                <i class="fa-solid fa-file-pdf fa-1x" style="color: navy"></i>
                            </a>

                        </td>

                    </tr>
                }


            </tbody>
        </table>
    </div>


    <script>
        new DataTable('#myTable');
    </script>

    <!--The script below performs dynamic calculation to produce the product and sub of the current reading, previous reading, usage and rate-->

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>

        // Number validation function
        function validateNumber(input) {
            if (isNaN(Number(input.value))) {
                alert('Please enter a number');
                input.value = '';
            }
        }

        // Get elements
        const cID = document.querySelector('#cID');
        const prev_Reading = document.querySelector('#prev_Reading');
        const cur_Reading = document.querySelector('#cur_Reading');

        // Attach listeners


        cID.addEventListener('input', () => {
            validateNumber(cID);
        });

        prev_Reading.addEventListener('input', () => {
            validateNumber(prev_Reading);
        });

        cur_Reading.addEventListener('input', () => {
            validateNumber(cur_Reading);
        });


        $(document).ready(function () {
            $('#Rate, #reading_Value, #cur_Reading, #prev_Reading').on('input', function () {
                var Rate = parseFloat($('#Rate').val());
                var cur_Reading = parseFloat($('#cur_Reading').val());
                var prev_Reading = parseFloat($('#prev_Reading').val());

                var calculatedReading = isNaN(cur_Reading) || isNaN(prev_Reading) ? '' : (cur_Reading - prev_Reading).toFixed(2);
                $('#reading_Value').val(calculatedReading); // Update the readonly reading_Value field

                // Calculate Rate based on reading_Value
                var readingValue = parseFloat(calculatedReading);
                if (!isNaN(readingValue)) {
                    if (readingValue < 100) {
                        Rate = 0.5;
                    } else if (readingValue < 300) {
                        Rate = 0.4;
                    } else {
                        Rate = 0.3;
                    }
                }
                $('#Rate').val(Rate.toFixed(2)); // Update the readonly Rate field

                var result = isNaN(Rate) || isNaN(calculatedReading) ? '' : (Rate * calculatedReading).toFixed(2);
                $('#result').val(result); // Update the readonly result field
            });
        });
    </script>


</body>
</html>
